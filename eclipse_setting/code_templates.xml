<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.constructorcomment_context" deleted="false" description="Comment for created constructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorcomment" name="constructorcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.destructorcomment_context" deleted="false" description="Comment for created destructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorcomment" name="destructorcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.filecomment_context" deleted="false" description="Comment for created C/C++ files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.filecomment" name="filecomment">/*******************************************************************************
 ** @file:       ${file_name}
 ** @author:     ${user}
 ** @version:    V1.0.0
 ** @time:       ${date}
 ** @brief:		 
 ** @revision:
 **             	- version 1.0.1: &lt;date&gt; &lt;name&gt;
 **             	&lt;discribe the change&gt;
 ******************************************************************************/</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.typecomment_context" deleted="false" description="Comment for created classes" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.typecomment" name="typecomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.fieldcomment_context" deleted="false" description="Comment for fields" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.fieldcomment" name="fieldcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.methodcomment_context" deleted="false" description="Comment for methods" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodcomment" name="methodcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppsourcefile" name="Default C++ source template">${filecomment}

/*******************************************************************************
 **                               INCLUDES
 ******************************************************************************/

/*******************************************************************************
 **                       INTERNAL MACRO DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 **                      COMMON VARIABLE DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 **                      INTERNAL VARIABLE DEFINITIONS
 ******************************************************************************/

/*******************************************************************************
 **                      INTERNAL FUNCTION PROTOTYPES
 ******************************************************************************/

/*******************************************************************************
 **                           FUNCTION DEFINITIONS
 ******************************************************************************/

${namespace_begin}

${declarations}

${namespace_end}

/******************************** End of file *********************************/</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ test files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cpptestfile" name="Default C++ test template">${filecomment}
${includes}

${namespace_begin}

${declarations}

${namespace_end}</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxHeader.contenttype_context" deleted="false" description="Default template for newly created C++ header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppheaderfile" name="Default C++ header template">${filecomment}

#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}

#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
 **                               INCLUDES
 ******************************************************************************/

/*******************************************************************************
 **                               DEFINES
 ******************************************************************************/

/*******************************************************************************
 **                     EXTERNAL VARIABLE DECLARATIONS
 ******************************************************************************/

/*******************************************************************************
 **                     EXTERNAL FUNCTION DECLARATIONS
 ******************************************************************************/

${namespace_begin}

${declarations}

${namespace_end}

#ifdef __cplusplus
}
#endif

#endif /* ${include_guard_symbol} */

/******************************** End of file *********************************/</template><template autoinsert="false" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="Default template for newly created C source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.csourcefile" name="Default C source template">${filecomment}
${includes}

${declarations}

/******************************** End of file *********************************/</template><template autoinsert="true" context="org.eclipse.cdt.core.cHeader.contenttype_context" deleted="false" description="Default template for newly created C header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cheaderfile" name="Default C header template">${filecomment}
#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}

${includes}

${declarations}

#endif /* ${include_guard_symbol} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="Beginning of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_begin" name="namespace_begin">namespace ${namespace_name} {</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="End of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_end" name="namespace_end">} /* namespace ${namespace_name} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.class_context" deleted="false" description="Code in created class definitions" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.class_body" name="class_body">${declarations}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.methodbody_context" deleted="false" description="Code in created method stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodbody" name="methodbody">	// ${todo} Auto-generated method stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.constructorbody_context" deleted="false" description="Code in created constructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorbody" name="constructorbody">	// ${todo} Auto-generated constructor stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.destructorbody_context" deleted="false" description="Code in created destructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorbody" name="destructorbody">	${body_statement}
	// ${todo} Auto-generated destructor stub</template><template autoinsert="true" context="org.eclipse.cdt.core.asmSource.contenttype_context" deleted="false" description="Default template for newly created assembly files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.asmsourcefile" name="Default assembly template">${filecomment}
</template><template autoinsert="true" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="Default template for newly created text files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.textfile" name="Default text file template">${file_name}
 Created on: ${date}
     Author: ${user}

</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.managedbuild.core.configuroScriptFile.contenttype_context" deleted="false" description="RTSC configuration of 'hello world'" enabled="true" id="org.eclipse.rtsc.xdctools.templates.cfg.hello" name="RTSC 'Hello World' Application Configuration">/*  ======== ${file_name} ========
 *  Application Configuration Script
 *
 *  Created on: ${date}
 *  Author:     ${user}
 */

/* initialize global program-level buffer sizes */
Program.stack = 128;
Program.heap = 0;
Program.argSize = 0;

/* link with System functions to enable System_printf() usage */
var System = xdc.useModule("xdc.runtime.System");

/* configure a "backend" output support module for System_printf() */
var SysMin = xdc.useModule("xdc.runtime.SysMin");
SysMin.bufSize = 81;

/* tell System to use this "backend" */
System.SupportProxy = SysMin;</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.managedbuild.core.configuroScriptFile.contenttype_context" deleted="false" description="RTSC empty application configuration" enabled="true" id="org.eclipse.rtsc.xdctools.templates.cfg.empty" name="RTSC Empty Application Configuration">/*
 *  ======== ${file_name} ========
 *  Application Configuration Script
 *
 *  Created on: ${date}
 *  Author:     ${user}
 */

/* initialize global program-level buffer sizes */
Program.stack = 128;
Program.heap = 0;
Program.argSize = 0;</template><template autoinsert="false" context="org.eclipse.cdt.make.core.makefile.contenttype_context" deleted="false" description="makefile to build a RTSC package" enabled="true" id="org.eclipse.rtsc.xdctools.templates.makefile.xdc" name="XDC Makefile">#
# Simple makefile to build a RTSC package
#
# This makefile assumes XDCROOT is either defined in the 
# environment or on the make command line and names the absolute
# path to an XDCtools installation dirctory.
#
# Created on: ${date}
# Author:     ${user}
#
all:
	$$(XDCROOT)/xdc XDOPTIONS=v $$@

clean:
	$$(XDCROOT)/xdc $$@</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.rtscBuildScript.contenttype_context" deleted="false" description="RTSC config.bld build script (native build)" enabled="false" id="org.eclipse.rtsc.xdctools.templates.config.bld.cdt" name="RTSC CDT config.bld Build Configuration">/*
 * This file specifes the installation directory of the compiler you're
 * using as well as the runtime model used to build your C files.
 */

/* get target name and, if needed, the compiler from the environment */
var targetName = java.lang.System.getenv("XDCTARGET");
if (targetName == null) {
    print("${file_name}:1: Note: to build C sources you must specify at least one target, but XDCTARGET is not defined.");
    Build.useTargets = null; /* no targets are needed for the build */
}
else {
    var Target = xdc.module(targetName);
    Target.rootDir = java.lang.System.getenv("XDCCOMPILER");
    if (Target.rootDir == null) {
        throw new Error("no compiler installation directory was specified by XDCCOMPILER");
    }

    /* specify which targets to use in RTSC builds */
    Build.targets = [Target];
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.rtscBuildScript.contenttype_context" deleted="false" description="RTSC package.bld build script for an executable" enabled="true" id="org.eclipse.rtsc.xdctools.templates.package.bld.exe" name="RTSC CDT package.bld Build Script (executable)">/* build executable for all targets specified in config.bld */
for (var i = 0; i &lt; Build.targets.length; i++) {
    var targ = Build.targets[i];
    var exe = Pkg.addExecutable("${project_name}", targ, targ.platform);
    exe.addObjects(["${project_name}.c"]);
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.rtscBuildScript.contenttype_context" deleted="false" description="RTSC package.bld build script for a library" enabled="true" id="org.eclipse.rtsc.xdctools.templates.package.bld.lib" name="RTSC CDT package.bld Build Script (library)">/*
 *  ${project_name} library package build script
 */

/* assume this package provides just one source file per module */
var SRCS = Pkg.modules; /* explicitly list sources via: var SRCS = ["src1.c", src2.c"]; */

/* build library for all targets specified in config.bld */
for (var i = 0; i &lt; Build.targets.length; i++) {
    var targ = Build.targets[i];
    var lib = Pkg.addLibrary("lib/" + Pkg.name, targ);
    lib.addObjects(SRCS);
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.xdcSpecSource.contenttype_context" deleted="false" description="XDCspec file that defines a package and its      contents" enabled="true" id="org.eclipse.rtsc.xdctools.templates.package.xdc" name="RTSC package specification">/*!
 *  ======== ${project_name} ========
 *  TODO: fill in description of the ${project_name} package here
 */
package ${project_name} [1, 0, 0]
{
    /* TODO: list any modules or interfaces provided here */
    //module Mod;      /* the ${project_name}.Mod module */
    //interface IMod;  /* the ${project_name}.IMod interface */
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.xdcSpecSource.contenttype_context" deleted="false" description="Module specification" enabled="true" id="org.eclipse.rtsc.xdctools.templates.Module.xdc" name="RTSC Target Module Specification File">/*!
 *  ======= ${file_base} ========
 *  ${file_base} module
 *
 *  TODO: fill in module's documentation here
 *
 *  Created on: ${date}
 *
 *  Author:     ${user}
 */
module ${file_base}
{
    /* TODO: declare configuration parameters, constants, and functions */

    /* if this module supports instances, uncomment the following line */
//instance:
    /* TODO: declare instance creation parameters and functions */
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.xdcSpecSource.contenttype_context" deleted="false" description="Host-side only module specification" enabled="true" id="org.eclipse.rtsc.xdctools.templates.MetaonlyModule.xdc" name="RTSC Host-only Module Specification File">/*!
 *  ======= ${file_base} ========
 *  ${file_base} specification
 *
 *  TODO: fill in module's documentation here
 *
 *  Created on: ${date}
 *
 *  Author:     ${user}
 */
metaonly module ${file_base}
{
}</template><template autoinsert="false" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="RTSC module's C implementation" enabled="true" id="org.eclipse.rtsc.xdctools.templates.Module.c" name="RTSC C Module Source">/*
 *  ======= ${file_base} ========
 *  ${file_base} target-side implementation
 *
 *  Created on: ${date}
 *  Author:     ${user}
 */
#include &lt;xdc/std.h&gt;
#include &lt;xdc/runtime/Startup.h&gt;

#include "${file_base}.h"

/* include ${file_base} internal implementation definitions */
#include "package/internal/${file_base}.xdc.h"

/*
 *  ======== ${file_base}_Module_startup ========
 */
Int ${file_base}_Module_startup(Int state)
{
    return (Startup_DONE);
}

#ifdef ${file_base}_Object
/*
 *  ======== ${file_base}_Instance_init ========
 *  ${file_base} created or constructed instance object initialization
 */
Void ${file_base}_Instance_init(${file_base}_Object *obj, const ${file_base}_Params *params)
{
    /* TODO: initialize ${file_base} instance state fields */
}
#endif</template><template autoinsert="false" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="RTSC 'Hello World' main program" enabled="true" id="org.eclipse.rtsc.xdctools.templates.main.c" name="RTSC 'Hello World' main">/*
 *  ======= ${file_base} ========
 *
 *  Created on: ${date}
 *  Author:     ${user}
 */
#include &lt;xdc/runtime/System.h&gt;

/*
 * ======== main ========
 */
Int main(void)
{
    System_printf("hello world.\n");

    return (0);
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.xdcScriptSource.contenttype_context" deleted="false" description="Target Module's Host-side Implementation" enabled="true" id="org.eclipse.rtsc.xdctools.templates.Module.xs" name="RTSC Target Module's Host-side Implementation">/*
 *  ======== ${file_name} ========
 *  ${file_base} configuration (host side) implementation
 *
 *  Created on: ${date}
 *  Author:     ${user}
 */

/*
 *  ======== instance$$static$$init ========
 *  ${file_base} instance object initialization
 */
function instance$$static$$init(obj, params)
{
    /* TODO: initialize ${file_base} instance state fields */
}

/*
 *  ======== module$$static$$init ========
 *  ${file_base} module object initialization
 */
function module$$static$$init(obj)
{
}</template><template autoinsert="false" context="org.eclipse.rtsc.xdctools.ui.rtscTemplateSource.contenttype_context" deleted="false" description="Target module's template file named by the @Template module attribute" enabled="true" id="org.eclipse.rtsc.xdctools.templates.Module.xdt" name="RTSC Target Module's C Template">%%{
    /*
     *  ======== ${file_name} ========
     *  ${file_base} module's C template
     *
     *  Created on: ${date}
     *  Author:     ${user}
     *
     *  See http://rtsc.eclipse.org/docs-tip/XDCscript_-_Template-Body for an
     *  example of what can be done with templates.
     */
    var srcFile = $$args[0];
%%}
/* 
 * DO NOT EDIT: The following content was generated by the template file:
 *    `srcFile`
 */</template></templates>